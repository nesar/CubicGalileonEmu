# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_viz.ipynb.

# %% auto 0
__all__ = ['plot_lines_with_param_color', 'plot_scatter_matrix']

# %% ../nbs/10_viz.ipynb 3
import numpy as np
import os
import matplotlib as mpl
import matplotlib.pylab as plt
import pandas as pd

# %% ../nbs/10_viz.ipynb 4
def plot_lines_with_param_color(param_array:np.array=None, # parameter array
                                x_array:np.array=None, # x-axis array
                                y_array_all:np.array=None, # y-axis array
                                title_str:str=None, # Title string
                                xlabel_str:str=None, # x-label string
                                ylabel_str:str=None, # y-label string
                                param_name_str:str=None, # Parameter string
                               ):
    
    
    f, a = plt.subplots(1,1, figsize = (8, 5))  

    norm = mpl.colors.Normalize(vmin=param_array.min(), vmax=param_array.max())
    cmap = mpl.cm.ScalarMappable(norm=norm, cmap=mpl.cm.plasma)
    cmap.set_array([])

    for sim_index in range(50):
        a.plot(x_array, y_array_all[sim_index], 
                 '-', alpha= 0.5, c=cmap.to_rgba(param_array[sim_index]), 
                 label='Sim: '+str(sim_index) )

    # plt.plot(stellar_mass_test, gsmf_um_test, 'k.', label='UM z=0.00')
    a.set_xscale('log')
    # plt.axhline(y=0, linestyle='dashed', color='black')
    # plt.yscale('log')
    # plt.xlim(4e9, )
    # plt.ylim(-0.02, 0.02)

    clb = f.colorbar(cmap , ax=a)

    clb.ax.tick_params(labelsize=15) 
    clb.ax.set_title(param_name_str, fontsize=15)

    plt.title(title_str, fontsize=15)
    a.set_xlabel(xlabel_str, fontsize=15)
    a.set_ylabel(ylabel_str, fontsize=15)
    
    return f

# %% ../nbs/10_viz.ipynb 5
def plot_scatter_matrix(df, 
                        colors
                       ): 
    
    f, a = plt.subplots(1,1, figsize = (10, 10))
    scatter_matrix = pd.plotting.scatter_matrix(df, 
                                                color=colors,  
                                                figsize=(10,10), 
                                                alpha=1.0, 
                                                ax=a, 
                                                grid=False, 
                                                diagonal='hist',
                                                range_padding=0.1,
                                                s=80);

    for ax in scatter_matrix.ravel():
        ax.set_xlabel(ax.get_xlabel(), fontsize = 14, rotation = 0)
        ax.set_ylabel(ax.get_ylabel(), fontsize = 14, rotation = 90)
        
    return f
