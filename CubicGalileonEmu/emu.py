# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_emu.ipynb.

# %% auto 0
__all__ = ['emulate']

# %% ../nbs/03_emu.ipynb 3
from sepia.SepiaModel import SepiaModel
from sepia.SepiaData import SepiaData
from sepia.SepiaPredict import SepiaEmulatorPrediction
# from sepia.SepiaPredict import SepiaFullPrediction
# from sepia.SepiaPredict import SepiaXvalEmulatorPrediction
# from sepia.SepiaSharedThetaModels import SepiaSharedThetaModels
import numpy as np

# %% ../nbs/03_emu.ipynb 4
def emulate(sepia_model:SepiaModel=None, # Input data in SEPIA format
        input_params:np.array=None, #Input parameter array 
       ) -> tuple: # 2 np.array of mean and (0.05,0.95) quantile in prediction
    
    if len(input_params.shape) == 1:
        ip = np.expand_dims(input_params, axis=0)
        
    else:
        ip = input_params
        
    pred_samples= sepia_model.get_samples(numsamples=10)
        
    pred = SepiaEmulatorPrediction(t_pred=ip, samples=pred_samples, model=sepia_model)
    
    pred_samps = pred.get_y()
    
    pred_mean = np.mean(pred_samps, axis=0).T
    pred_err = np.quantile(pred_samps, [0.05, 0.95], axis=0).T
    
    return pred_mean, pred_err
