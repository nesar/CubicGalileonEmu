# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_load.ipynb.

# %% auto 0
__all__ = ['DATA_DIR', 'LIBRARY_ZK_FILE', 'LIBRARY_BK_FILE', 'LIBRARY_PARAM_FILE', 'PARAM_NAME', 'load_boost_training',
           'load_params']

# %% ../nbs/00_load.ipynb 3
import numpy as np
import pkg_resources

# %% ../nbs/00_load.ipynb 5
DATA_DIR = "data/"
LIBRARY_ZK_FILE = pkg_resources.resource_stream("CubicGalileonEmu", DATA_DIR + "z_k.txt").name
LIBRARY_BK_FILE = pkg_resources.resource_stream("CubicGalileonEmu", DATA_DIR + "Boost.npy").name
LIBRARY_PARAM_FILE = pkg_resources.resource_stream("CubicGalileonEmu", DATA_DIR + "cosmo_newdesign.txt").name
PARAM_NAME = [r"$\Omega_m*h^2$", r"$n_s$", r"$\sigma_8$", r"$E_{ds}$", r"$f_\phi$"]

# %% ../nbs/00_load.ipynb 6
def load_boost_training(Bk_fileIn:str=LIBRARY_BK_FILE, # Input file for Boost
                        Zk_fileIn:str=LIBRARY_ZK_FILE, # Input file for redshift and wavenumbers
                        ) -> tuple: # Boost, wavenumbers, redshifts 
    Bk_all = np.load(Bk_fileIn)
    zk_all = np.loadtxt(Zk_fileIn)
    
    z_all = zk_all[:, 0][np.isfinite(zk_all[:, 0])]
    k_all = zk_all[:, 1]
    
    return Bk_all, k_all, z_all

# %% ../nbs/00_load.ipynb 7
def load_params(p_fileIn:str=LIBRARY_PARAM_FILE, # Input file for parameters
               ) -> np.array: # Parameters
    p_all = np.loadtxt(p_fileIn)
    return p_all
